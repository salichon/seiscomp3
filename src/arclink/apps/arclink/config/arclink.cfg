# Path to the directory where the request files are temporarily created 
# and stored until purged.
request_dir = @ROOTDIR@/var/lib/arclink/requests

# Contact e-mail address of the operator
contact_email = ""

# Maximum number of parallel TCP connections (0 - no limit)
connections = 500

# Maximum number of parallel TCP connections for a single IP address (0 
# - no limit)
connections_per_ip = 20

# Maximum number of requests waiting to be processed. When the request queue
# is full, no more requests are accepted (0 - no limit)
request_queue = 500

# Maximum number of queued requests per user.
request_queue_per_user = 10

# Maximum request size in lines
request_size = 1000

# Request Handler command to execute
handler_cmd = "@ROOTDIR@/share/plugins/arclink/reqhandler -s"

# Number of request handler instances to keep running even if they are idle
handlers_soft = 4

# Maximum numbers of request handler instances, e.g., the maximum number of 
# requests that are processed in parallel
handlers_hard = 10

# If a request handler blocks the input for more than the given time period
# in seconds, then the ArcLink server shuts down the request handler 
# (0 - no timeout check).
handler_timeout = 10

# Restart terminated request handlers after this time period in seconds (0 - never
# re-start terminated request handlers). A request handler may terminate itself
# because of some internal error or it can be shut down by ArcLink if timeout occurs
# or an invalid response was received.
handler_start_retry = 60

# Wait this time period in seconds for a request handler to terminate the connection
# itself, then send the TERM signal (0 - wait forever). If a request handler does
# not terminate on its own within this time period, the KILL signal will be sent.
handler_shutdown_wait = 10

# TCP port used by the server
port = 18001

# Path to the lock file; used by the seiscomp utility to check if ArcLink is running
lockfile = @ROOTDIR@/var/run/arclink.pid

# The state of requests is dumped into this file when ArcLink exits. If this parameter is defined,
# but the file does not exist (e.g., because ArcLink crashed), then ArcLink reads the *.desc files
# in the request directory to restore state. If "statefile" is not defined, then ArcLink does not
# restore the state after restart.
statefile = @ROOTDIR@/var/lib/arclink/arclink.state

# Password of user "admin" (special user that can view requests of all users).
admin_password = "test123"

# Maximum number of simultaneous request handler instances per request type
handlers_waveform = 2
# Maximum number of simultaneous request handler instances for response requests.
handlers_response = 2
# Maximum number of simultaneous request handler instances for inventory requests.
handlers_inventory = 2
# Maximum number of simultaneous request handler instances for routing requests.
handlers_routing = 2
# Maximum number of simultaneous request handler instances for quality control requests.
handlers_qc = 2
# Maximum number of simultaneous request handler instances for Green's function requests.
handlers_greensfunc = 1

# Delete completed requests from RAM when not used (STATUS, DOWNLOAD or BDOWNLOAD commands)
# after the given time span in seconds (0-never delete requests).
swapout_time = 600

# Delete finished requests and data products also from the request directory when not
# used (STATUS, DOWNLOAD or BDOWNLOAD commands) after the given time span in
# seconds (0-never delete requests).
purge_time = 864000

# Enable the use of encryption to deliver restricted network data volumes
encryption = false

# File containing a list of users (e-mail addresses) and passwords separated
# by &quot;:&quot;. Each password in this file is encrypted using the *admin_password*
# of the server. For increased security make sure that this file is only readable by
# the user running the Arclink server. Before changing *admin_password* don't forget
# to migrate this file using the [arclinkpass] tool.
password_file = @ROOTDIR@/var/lib/arclink/password.txt

# request tracking (log) directory
#reqhandler.trackdir = @ROOTDIR@/var/lib/arclink/reqtrack

# request tracking: save request logs in data base?
reqhandler.trackdb = False

# root directory of NRT SDS
reqhandler.nrtdir = @ROOTDIR@/var/lib/archive

# root directory of SDS archive
reqhandler.archdir = /iso_sds

# path to the subnode routing table
#reqhandler.subnodelist = @ROOTDIR@/var/lib/arclink/subnodes

# maximum request size in megabytes
reqhandler.maxsize = 500

